{"version":3,"file":"static/js/944.26de4dc3.chunk.js","mappings":"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","sources":["webpack://react-kabzda/./src/components/Profile/Profile.module.css?b512","components/Profile/ProfileStatusWithHooks.jsx","components/Profile/MyPosts/ProfileInfo/ProfileInfo.jsx","webpack://react-kabzda/./src/components/Profile/MyPosts/Post/Post.module.css?87e6","components/Profile/MyPosts/Post/Post.jsx","webpack://react-kabzda/./src/components/Profile/MyPosts/MyPosts.module.css?831b","components/Profile/MyPosts/MyPostForm.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx","hoc/withAuthRedirect.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"content\":\"Profile_content__My4gE\",\"item\":\"Profile_item__R0DQp\"};","import React, {useEffect} from 'react';\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n    const [editMode, setEditMode] = React.useState(false);\r\n    const [status, setStatus] = React.useState(props.status);\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status || '')\r\n    }, [props.status]);\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true)\r\n\r\n    }\r\n\r\n    const deactivatedEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateStatus(status)\r\n    }\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {!editMode &&\r\n                <div>\r\n                    <span onDoubleClick={activateEditMode}>{props.status || '-----------'}</span>\r\n                </div>\r\n            }\r\n            {editMode &&\r\n                <div>\r\n                    <input onChange={onStatusChange}\r\n                           autoFocus={true}\r\n                           onBlur={deactivatedEditMode}\r\n                           value={status}\r\n                    />\r\n                </div>\r\n            }\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ProfileStatusWithHooks;","import React from 'react';\r\n\r\nimport Preloader from \"../../../../common/preloader/Preloader\";\r\nimport ProfileStatusWithHooks from \"../../ProfileStatusWithHooks\";\r\n\r\nconst ProfileInfo = ({profile, status, updateUserStatus}) => {\r\n\r\n    if (!profile) {\r\n        return <Preloader/>\r\n    }\r\n\r\n    return (\r\n        <div>\r\n\r\n            <div>\r\n                <img src={profile.photos.large} alt={'ava'}/>\r\n\r\n                <ProfileStatusWithHooks status={status} updateStatus={updateUserStatus}/>\r\n                <h2>{profile.fullName}</h2>\r\n                <h3>{profile.aboutMe}</h3>\r\n                <ul>\r\n                    <h3>Contacts</h3>\r\n                    <li>Facebook - {profile.contacts.facebook}</li>\r\n                    <li>Github - {profile.contacts.github}</li>\r\n                    <li>Instagram - {profile.contacts.instagram}</li>\r\n                    <li>MainLink - {profile.contacts.mainLink}</li>\r\n                    <li>Twitter - {profile.contacts.twitter}</li>\r\n                    <li>Website - {profile.contacts.website}</li>\r\n                    <li>Youtube - {profile.contacts.youtube}</li>\r\n                </ul>\r\n                <p>Looking for a job - {profile.lookingForAJob ? 'yes' : 'no'}</p>\r\n                <p>Job description - {profile.lookingForAJobDescription}</p>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ProfileInfo;","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"Post_item__inop+\"};","import style from './Post.module.css'\r\n\r\nconst Post = (props) => {\r\n    return (\r\n        <div className={style.item}>\r\n            <img\r\n                src=\"https://www.custode.com/wordpress/wp-content/uploads/2013/06/ArcheoLogo.png\"\r\n                alt={'ava'}\r\n            />\r\n            {props.message}\r\n            <div>\r\n                <span>like</span> {props.likeCount}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Post;","// extracted by mini-css-extract-plugin\nexport default {\"postsBlock\":\"MyPosts_postsBlock__yTfpd\",\"posts\":\"MyPosts_posts__uVKPe\"};","import React from 'react';\r\nimport {Field, Form, Formik} from \"formik\";\r\nimport * as Yup from \"yup\";\r\n\r\nimport {Textarea} from \"../../../common/FormControls/FormControls\";\r\nimport {maxLengthCreator, required} from \"../../../utils/validators/validators\";\r\n\r\nconst maxLength50 = maxLengthCreator(50);\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    myPost: Yup.string().required('Required').max(50, 'Must be 50 characters or less'),\r\n});\r\n\r\nconst MyPostForm = (props) => {\r\n\r\n    return (\r\n        <Formik\r\n            validationSchema={validationSchema}\r\n            initialValues={{myPost: ''}}\r\n            onSubmit={(values, {resetForm}) => {\r\n                props.onSubmit(values);\r\n                resetForm();\r\n            }}\r\n        >\r\n            {({handleSubmit}) => (\r\n                <Form onSubmit={handleSubmit}>\r\n                    <div>\r\n                        <Field name=\"myPost\"\r\n                               placeholder=\"Write new post\"\r\n                               component={Textarea}\r\n                               validate={[required, maxLength50]}\r\n                        />\r\n                    </div>\r\n                    <button type=\"submit\">Login</button>\r\n                </Form>\r\n            )}\r\n        </Formik>\r\n\r\n    )\r\n};\r\n\r\nexport default MyPostForm;","import {memo} from \"react\";\r\n\r\nimport Post from \"./Post/Post\";\r\nimport style from './MyPosts.module.css'\r\nimport MyPostForm from \"./MyPostForm\";\r\n\r\nconst MyPosts = memo(props => {\r\n\r\n    const postElements =\r\n        [...props.posts]\r\n            .reverse()\r\n            .map(post => (\r\n                <Post\r\n                    key={post.id}\r\n                    message={post.post}\r\n                    likeCount={post.likeCount}/>\r\n            ))\r\n\r\n\r\n    const onAddPost = (formData) => {\r\n        console.log(formData, 'formData')\r\n        props.addPost(formData.myPost)\r\n    }\r\n\r\n    return (\r\n        <div className={style.postsBlock}>\r\n            My posts\r\n            <MyPostForm onSubmit={onAddPost}/>\r\n            <div className={style.posts}>\r\n                {postElements}\r\n            </div>\r\n        </div>\r\n    )\r\n})\r\n\r\nexport default MyPosts;","import {connect} from \"react-redux\";\r\n\r\nimport {addPost} from \"../../../redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\n\r\nconst mapStateToProps = (state) => {\r\n\r\n    return {\r\n        posts: state.profilePage.posts,\r\n    }\r\n}\r\nexport const MyPostsContainer = connect(mapStateToProps, {addPost})(MyPosts)","import style from './Profile.module.css'\r\nimport ProfileInfo from \"./MyPosts/ProfileInfo/ProfileInfo\";\r\nimport {MyPostsContainer} from \"./MyPosts/MyPostsContainer\";\r\n\r\nconst Profile = (props) => {\r\n\r\n    return (\r\n        <div\r\n            className={style.content}>\r\n            <ProfileInfo profile={props.profile} status={props.status} updateUserStatus={props.updateUserStatus}/>\r\n            <MyPostsContainer/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile;","import {Component} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {compose} from \"redux\";\r\n\r\nimport Profile from \"./Profile\";\r\nimport {\r\n    getUserProfile,\r\n    setUserProfile,\r\n    setUserStatus,\r\n    updateUserStatus\r\n} from \"../../redux/profile-reducer\";\r\nimport withRouter from \"./withRouter\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\n\r\n\r\nclass ProfileContainer extends Component {\r\n\r\n    componentDidMount() {\r\n\r\n        let userId = this.props.router.params.userId;\r\n\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserId;\r\n            if (!userId) {\r\n                this.props.history.push(\"/login\");\r\n            }\r\n        }\r\n\r\n        this.props.getUserProfile(userId)\r\n        this.props.setUserStatus(userId)\r\n    }\r\n\r\n    render() {\r\n\r\n        return <Profile {...this.props} profile={this.props.profile} status={this.props.status}\r\n                        updateUserStatus={this.props.updateUserStatus}/>\r\n\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        profile: state.profilePage.profile,\r\n        status: state.profilePage.status,\r\n        authorizedUserId: state.auth.userId,\r\n        isAuth: state.auth.isAuth\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {setUserProfile, getUserProfile, setUserStatus, updateUserStatus}),\r\n    withAuthRedirect,\r\n    withRouter\r\n)(ProfileContainer)\r\n","import {Navigate} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\nimport {Component} from \"react\";\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport const withAuthRedirect = (ComponentA) => {\r\n\r\n    class RedirectComponent extends Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Navigate to={'/login'}/>\r\n\r\n            return <ComponentA {...this.props}/>\r\n        }\r\n    }\r\n\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToProps)(RedirectComponent)\r\n\r\n    return ConnectedAuthRedirectComponent;\r\n}\r\n\r\n"],"names":["props","editMode","setEditMode","React","status","setStatus","useEffect","_jsxs","children","_jsx","onDoubleClick","activateEditMode","onChange","e","currentTarget","value","autoFocus","onBlur","deactivatedEditMode","updateStatus","_ref","profile","updateUserStatus","src","photos","large","alt","ProfileStatusWithHooks","fullName","aboutMe","contacts","facebook","github","instagram","mainLink","twitter","website","youtube","lookingForAJob","lookingForAJobDescription","Preloader","className","style","message","likeCount","maxLength50","maxLengthCreator","validationSchema","Yup","shape","myPost","required","max","Formik","initialValues","onSubmit","values","resetForm","_ref2","handleSubmit","Form","Field","name","placeholder","component","Textarea","validate","type","memo","postElements","posts","reverse","map","post","Post","id","MyPostForm","formData","console","log","addPost","MyPostsContainer","connect","state","profilePage","MyPosts","ProfileInfo","ProfileContainer","Component","componentDidMount","userId","this","router","params","authorizedUserId","history","push","getUserProfile","setUserStatus","render","Profile","compose","auth","isAuth","setUserProfile","withAuthRedirect","withRouter","mapStateToProps","ComponentA","RedirectComponent","Navigate","to"],"sourceRoot":""}